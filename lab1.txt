По своей сути процессор сегодня - это черт, который читает строку за строкой из бесконечного свитка
так быстро как может. Следующую строку он начинает читать только тогда когда закончит предыдущую и выполнит действие
, которое в ней написано. Они сегодня бывают довольно изощренными(например ф-ия подсчета длины строки есть уже в самом процессоре), но все же в основе лежали и лежат довольно примитивные вещи: арифметика, сравнения, переходы по
свитку и редактирование свитка(привет фон - нейман). 
(Если быть еще чуть более точным то несколько таких чтецов пытаются читать одновременно, забирая на себя часть глав
Если разработчики укажут какие главы можно читать параллельно. Во многом функциональное программирование
как раз про ф-ую декомпозицию: разделение на сущности, которые могут исполняться параллельно , не влиять на кого - то
и не испытывать влияния из вне, т.е. не зависеть от состояния и не порождать состояние). Вот тут гораздо отчетливее проступает аналогия с 
лентой в машине фон - неймана. Т.е. не стоит рассуждать так: машина фон - неймана - это что - то давно почившее ибо нет в продаже никаких фоннеймн - буков и фоннеймн-вотч. (мне: Гарвардская архитектура встречается нормальному
человеку только в контроллерах и устройствах с ними. Т.е. повсюду, но мы этого не видим)